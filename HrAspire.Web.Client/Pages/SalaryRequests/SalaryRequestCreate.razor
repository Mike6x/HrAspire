@page "/salary-request-create/{employeeId}"

@attribute [Authorize]

@inject SalaryRequestsApiClient SalaryRequestsApiClient
@inject NavigationManager NavigationManager

<PageTitle>Create Salary Request - HR Aspire</PageTitle>

<h1>Create Salary Request</h1>
<hr />

<div class="row">
    <div class="col-md-4">
        <section>
            <StatusMessage Message="@ErrorMessage" IsError="true" />
            <EditForm Model="Input" OnValidSubmit="CreateSalaryRequestAsync">
                <FluentValidationValidator DisableAssemblyScanning="true" />
                <ValidationSummary class="text-danger" role="alert" />
                <div class="form-floating mb-3">
                    <InputNumber @bind-Value="Input.NewSalary"
                                 step=".01"
                                 class="form-control"
                                 aria-required="true"
                                 placeholder="5000.00" />
                    <label for="new-salary" class="form-label">New Salary</label>
                    <ValidationMessage For="() => Input.NewSalary" class="text-danger" />
                </div>
                <div class="form-floating mb-3">
                    <InputTextArea @bind-Value="Input.Notes" class="form-control floating-label-textarea" placeholder="notes" />
                    <label for="notes" class="form-label">Notes</label>
                    <ValidationMessage For="() => Input.Notes" class="text-danger" />
                </div>

                <div>
                    <button type="submit" class="w-100 btn btn-lg btn-primary">Create</button>
                </div>
            </EditForm>
        </section>
    </div>
</div>

@code {
    [Parameter]
    public string EmployeeId { get; set; } = default!;

    private SalaryRequestCreateRequestModel Input { get; set; } = new();

    private string? ErrorMessage { get; set; }

    private async Task CreateSalaryRequestAsync()
    {
        this.ErrorMessage = null;

        var (newSalaryRequestId, errorMessage) = await this.SalaryRequestsApiClient.CreateSalaryRequestAsync(this.EmployeeId, this.Input);
        if (string.IsNullOrWhiteSpace(errorMessage))
        {
            this.NavigationManager.NavigateTo($"/salary-requests/{newSalaryRequestId}");
        }
        else
        {
            this.ErrorMessage = errorMessage;
        }
    }
}
